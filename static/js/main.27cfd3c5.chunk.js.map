{"version":3,"sources":["components/Header.jsx","components/icons/CodepenIcon.jsx","components/icons/EmailIcon.jsx","components/icons/GithubIcon.jsx","components/icons/GearIcon.jsx","components/Menu.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","CodepenIcon","props","role","viewBox","xmlns","width","height","aria-hidden","focusable","fill","d","EmailIcon","GithubIcon","GearIcon","concat","class","Menu","state","open","colorPicked","clickHandler","e","stopPropagation","_this","closeNav","openNav","handleColorChange","target","setState","onSelectColor","Fragment","onClick","this","icons_GearIcon","Component","App","color","document","body","classList","add","particles_default","params","particles","number","value","size","interactivity","events","onhover","enable","mode","style","position","left","top","components_Header","href","rel","icons_GithubIcon","icons_CodepenIcon","icons_EmailIcon","components_Menu","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27cfd3c5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <div className=\"col-md-12\">\n    <div className=\"header text-center\">\n      <h1 className=\"heading\">Matt Coleman</h1>\n      <p>Front end Developer</p>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst CodepenIcon = props => (\n  <svg\n    className=\"icon\"\n    role=\"img\"\n    viewBox=\"0 0 512 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={props.width}\n    height={props.height}\n    aria-hidden=\"true\"\n    focusable=\"false\"\n  >\n    <title>CodePen icon</title>\n    <path\n      fill={props.fill}\n      d=\"M502.285 159.704l-234-156c-7.987-4.915-16.511-4.96-24.571 0l-234 156C3.714 163.703 0 170.847 0 177.989v155.999c0 7.143 3.714 14.286 9.715 18.286l234 156.022c7.987 4.915 16.511 4.96 24.571 0l234-156.022c6-3.999 9.715-11.143 9.715-18.286V177.989c-.001-7.142-3.715-14.286-9.716-18.285zM278 63.131l172.286 114.858-76.857 51.429L278 165.703V63.131zm-44 0v102.572l-95.429 63.715-76.857-51.429L234 63.131zM44 219.132l55.143 36.857L44 292.846v-73.714zm190 229.715L61.714 333.989l76.857-51.429L234 346.275v102.572zm22-140.858l-77.715-52 77.715-52 77.715 52-77.715 52zm22 140.858V346.275l95.429-63.715 76.857 51.429L278 448.847zm190-156.001l-55.143-36.857L468 219.132v73.714z\"\n    />\n  </svg>\n);\n\nexport default CodepenIcon;\n","import React from 'react';\n\nconst EmailIcon = props => (\n  <svg\n    className=\"icon\"\n    role=\"img\"\n    viewBox=\"0 0 512 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={props.width}\n    height={props.height}\n    aria-hidden=\"true\"\n    focusable=\"false\"\n  >\n    <title>Email icon</title>\n    <path\n      fill={props.fill}\n      d=\"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\"\n    />\n  </svg>\n);\n\nexport default EmailIcon;\n","import React from 'react';\n\nconst GithubIcon = props => (\n  <svg\n    className=\"icon\"\n    role=\"img\"\n    viewBox=\"0 0 496 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={props.width}\n    height={props.height}\n    focusable=\"false\"\n    aria-hidden=\"true\"\n  >\n    <title>GitHub icon</title>\n    <path\n      fill={props.fill}\n      d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n    />{' '}\n    />\n  </svg>\n);\n\nexport default GithubIcon;\n","import React from 'react';\n\nconst GearIcon = props => (\n  <svg\n    className={`icon icon-gear ${props.class}`}\n    role=\"img\"\n    viewBox=\"0 0 14 16\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={props.width}\n    height={props.height}\n    aria-hidden=\"true\"\n    focusable=\"false\"\n  >\n    <title>Gear icon</title>\n    <path\n      fill={props.fill}\n      d=\"M14 8.77v-1.6l-1.94-.64-.45-1.09.88-1.84-1.13-1.13-1.81.91-1.09-.45-.69-1.92h-1.6l-.63 1.94-1.11.45-1.84-.88-1.13 1.13.91 1.81-.45 1.09L0 7.23v1.59l1.94.64.45 1.09-.88 1.84 1.13 1.13 1.81-.91 1.09.45.69 1.92h1.59l.63-1.94 1.11-.45 1.84.88 1.13-1.13-.92-1.81.47-1.09L14 8.75v.02zM7 11c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z\"\n    />\n  </svg>\n);\n\nexport default GearIcon;\n","import React, { Component } from 'react';\n\nimport { GearIcon } from '../components/icons';\n\nclass Menu extends Component {\n  state = {\n    open: false,\n    colorPicked: 'color-1'\n  };\n\n  clickHandler = e => {\n    e.stopPropagation();\n\n    if (!this.state.open) {\n      this.openNav();\n    } else {\n      this.closeNav();\n    }\n  };\n\n  handleColorChange = e => {\n    let colorPicked = e.target.className;\n    this.setState({\n      colorPicked: colorPicked\n    });\n    this.props.onSelectColor(colorPicked);\n    this.closeNav();\n  };\n\n  openNav = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  closeNav = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <button className=\"btn btn-menu-trigger\" onClick={this.clickHandler}>\n          <GearIcon class={this.state.colorPicked} width={40} height={40} />\n        </button>\n        <div className={`wrapper ${this.state.open ? 'is-active' : ''}`}>\n          <ul className=\"color-list\">\n            <li className=\"color\">\n              <button className=\"color-1\" onClick={this.handleColorChange} />\n            </li>\n            <li className=\"color\">\n              <button className=\"color-2\" onClick={this.handleColorChange} />\n            </li>\n            <li className=\"color\">\n              <button className=\"color-3\" onClick={this.handleColorChange} />\n            </li>\n            <li className=\"color\">\n              <button className=\"color-4\" onClick={this.handleColorChange} />\n            </li>\n            <li className=\"color\">\n              <button className=\"color-5\" onClick={this.handleColorChange} />\n            </li>\n          </ul>\n        </div>\n        <div className={`overlay ${this.state.open ? 'is-active' : ''}`} />\n      </>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport { CodepenIcon, EmailIcon, GithubIcon } from './components/icons';\n\nclass App extends Component {\n  handleColorChange = color => {\n    document.body.classList = '';\n    document.body.classList.add(color);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Particles\n          className=\"particles\"\n          params={{\n            particles: {\n              number: {\n                value: 50\n              },\n              size: {\n                value: 3\n              }\n            },\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: 'repulse'\n                }\n              }\n            }\n          }}\n          style={{ position: 'fixed', width: '100vw', height: '100vh', left: 0, top: 0 }}\n        />\n        <div className=\"row\">\n          <Header />\n\n          <div className=\"col-md-12\">\n            <ul className=\"contact-list\">\n              <li>\n                <a\n                  className=\"btn btn--has-border\"\n                  href=\"https://github.com/matt3188\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <GithubIcon fill=\"#fff\" width={50} height={50} />\n                </a>\n              </li>\n              <li>\n                <a\n                  className=\"btn btn--has-border\"\n                  href=\"http://codepen.io/mattcoleman\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <CodepenIcon fill=\"#fff\" width={50} height={50} />\n                </a>\n              </li>\n              <li>\n                <a className=\"btn btn--has-border\" href=\"mailto:hello@matt-coleman.co.uk\">\n                  <EmailIcon fill=\"#fff\" width={50} height={50} />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <Menu onSelectColor={this.handleColorChange} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}